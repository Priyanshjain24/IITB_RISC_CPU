library std;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity Datapath is
	port(input: in std_logic_vector(15 downto 0);
	output: out std_logic_vector(20 downto 0));
end entity;

architecture path of Datapath is

----------------------------------------------------Components-----------------------------------------------------

component Stage_1 is
	port( clk, rst: in std_logic;
	RF_A1, RF_A2, RF_A_W : in std_logic_vector (2 downto 0);
	RF_D_IN: in std_logic_vector(15 downto 0);
	RF_w: in std_logic;
	RF_O1, RF_O2 : out std_logic_vector(15 downto 0);
	P1_I: out std_logic_vector(15 downto 0));
end component;

component Stage_2 is
	port( clk, rst in std_logic;
	P1_O: in std_logic_vector(15 downto 0);
	P2_I: out std_logic_vector(22 downto 0));
end component;

component Stage_3 is
	port( clk, rst: in std_logic;
	RF_A1, RF_A2: out std_logic_vector(2 downto 0);
	RF_D1, RF_D2: in std_logic_vector(15 downto 0);
	P2_O: in std_logic_vector(22 downto 0);
	P3_I: out std_logic_vector(41 downto 0));
end component;

component Stage_4 is
	port( clk, rst;
	P3_O: in std_logic_vector(41 downto 0);
	P4_I: out std_logic_vector(19 downto 0););
end component;

component Stage_6 is
	port( clk, rst;
	P5_O: in std_logic_vector(19 downto 0);
	RF_D: out std_logic_vector(15 downto 0);
    RF_A: out std_logic_vector(2 downto 0));
    RF_w: out std_logic;
end component;

component Pipe_reg is
	port(
	  clk, rst, wr: in std_logic;
	  Din: in std_logic_vector(50 downto 0);
	  Dout: out std_logic_vector(50 downto 0));
	end component;

component clock_generator is
	port (clk_out, rst : out std_logic);
component clock_generator;

-------------------------------------------------------------------------------------------------------------------

signal clk rst, RF_w, wr: std_logic;
signal P1_I, P1_O, P2_I, P2_O, P3_I, P3_O, P4_I, P4_O: std_logic_vector(50 downto 0);
signal RF_A1, RF_A2, RF_A_W: std_logic_vector(2 downto 0);
signal RF_D_IN, RF_O1, RF_O2: std_logic_vector(15 downto 0);

-------------------------------------------------------------------------------------------------------------------

clock: clock_generator port map (clk, rst);

S1: Stage_1 port map (clk, rst, RF_A1, RF_A2, RF_A_W, RF_D_IN, RF_w, RF_O1, RF_O2, P1_I);
P1: Pipe_reg port map (clk, rst, wr, P1_I, P1_O);

S2: Stage_2 port map (clk, rst, P1_O, P2_I);
P2: Pipe_reg port map (clk, rst, wr, P2_I, P2_O);

S3: Stage_3 port map (clk, rst, RF_A1, RF_A2, RF_O1, RF_O2, P2_O, P3_I);
P3: Pipe_reg port map (clk, rst, wr, P3_I, P3_O);

S4: Stage_4 port map (clk, rst, P3_O, P4_I);
P4: Pipe_reg port map (clk, rst, wr, P4_I, P4_O);

-- S5: Stage_5 port map ();
-- P5: Pipe_reg port map ();

S6: Stage_6 port map (clk, rst P4_O, RF_D_IN, RF_A, RF_w);

-------------------------------------------------------------------------------------------------------------------

wr <= '1';